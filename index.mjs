// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-box-muller@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-improved-ziggurat@esm/index.mjs";var c="improved-ziggurat",u=!0,f={};function g(m){var l,g,h;if(l={name:c,copy:u},arguments.length){if(!s(m))throw new TypeError(d("invalid argument. Must provide an object. Value: `%s`.",m));if(o(m,"name")&&(l.name=m.name),o(m,"prng")){if(l.prng=m.prng,void 0===l.prng)throw new TypeError(d("invalid option. `%s` option cannot be undefined. Option: `%s`.","prng",l.prng))}else if(o(m,"state")){if(l.state=m.state,void 0===l.state)throw new TypeError(d("invalid option. `%s` option cannot be undefined. Option: `%s`.","state",l.state))}else if(o(m,"seed")&&(l.seed=m.seed,void 0===l.seed))throw new TypeError(d("invalid option. `%s` option cannot be undefined. Option: `%s`.","seed",l.seed));if(o(m,"copy")&&(l.copy=m.copy,!r(l.copy)))throw new TypeError(d("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",l.copy))}if(void 0===(h=f[l.name]))throw new Error(d("invalid option. Unrecognized/unsupported PRNG. Option: `%s`.",l.name));return g=void 0===l.prng?void 0===l.state?void 0===l.seed?h.factory():h.factory({seed:l.seed}):h.factory({state:l.state,copy:l.copy}):h.factory({prng:l.prng}),e(L,"NAME","randn"),l.prng?(e(L,"seed",null),e(L,"seedLength",null),n(L,"state",i(null),a),e(L,"stateLength",null),e(L,"byteLength",null),e(L,"toJSON",i(null))):(t(L,"seed",j),t(L,"seedLength",v),n(L,"state",x,w),t(L,"stateLength",b),t(L,"byteLength",y),e(L,"toJSON",E)),e(L,"PRNG",g.PRNG),L;function j(){return g.seed}function v(){return g.seedLength}function b(){return g.stateLength}function y(){return g.byteLength}function x(){return g.state}function w(e){g.state=e}function E(){var e={type:"PRNG"};return e.name=L.NAME+"-"+g.NAME,e.state=p(g.state),e.params=[],e}function L(){return g()}}f["box-muller"]=m,f["improved-ziggurat"]=l;var h=g();e(h,"factory",g);export{h as default,g as factory};
//# sourceMappingURL=index.mjs.map
